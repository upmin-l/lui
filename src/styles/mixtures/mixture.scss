@import "../constant/commonality";
@import "./animation";

$l: '';
/* BEM 命名*/
/*  l - 名字   */
@mixin BEM($val) {
  $l: $prefixName + '-' + $val !global;
  .#{$l} {
    @content
  }
}

/*why type the css constructor*/
/* is_ name */
@mixin is-when($what) {
  @at-root {
    &.#{$state-prefix + $what} {
      @content
    }
  }
}

/* separator */
@mixin modifier($modifier) {
  $currentSelector: ".";
  @each $item in $modifier {
    $currentSelector: #{$currentSelector +$prefixName+ $modifier-separator+$item }
  }
  @at-root {
    #{$currentSelector} {
      @content
    }
  }
}

/*************************************** button ************************************************************************/
/*button the theme*/
@mixin button-theme($modifier) {
  $selector: &;
  $currentSelector: ".";
  @each $item in $modifier {
    $currentSelector: #{ $currentSelector + 'l-button' +$modifier-separator + $item +','}
  }
  @at-root {
    #{$currentSelector} {
      @content
    }
  }
}

/*button then state*/
@mixin button-state($color,$background-color,$border-color,$-hover-color,$-active-color) {
  color: $color;
  background-color: $background-color;
  background-image: linear-gradient(-180deg, $background-color, $border-color 90%);
  border-color: $border-color;
  box-shadow: 0 2px 6px 0 mix($background-color, #fff, 70%);
  &:hover,
  &:focus {
    background-color: $-hover-color;
    border-color: $-hover-color;
  }
  &:active {
    background-color: $-active-color;
    color: #fff;
    border-color: transparent;
  }
  &.is_simple {
    color: $background-color;
    background: 0 0;
    border-color: $background-color;
  }
  &.is_simple:hover, &.is_simple:focus {
    background: mix($background-color, #fff, 10%)
  }
  &.is_disabled {
    cursor: no-drop;
    background: mix(#fff, $background-color, 60%);
    border-color: mix(#fff, $background-color, 60%);
    box-shadow: none;
    transform: translate(0);
  }
  &.is_after {
    position: relative;

    &:after {
      content: '';
      display: block;
      background: $background-color;
      pointer-events: none;
      position: absolute;
      z-index: 1;
      top: -1px;
      left: -1px;
      bottom: -1px;
      right: -1px;
      border-radius: inherit;
      border: 0 solid $border-color;
      opacity: 0.4;
      animation: after-scale 0.2s linear forwards;
      flex-shrink: 0;
    }
  }
}


//button then gradient
@mixin button-gradient($background-image,$border-color,$background-color,$-hover-color-primary) {
  color: #ffff;
  background-image: $background-image;
  border: $border-color;
  background-color: $background-color;
  &:hover {
    background-color: $-hover-color-primary;
    border-color: $-hover-color-primary;
    box-shadow: 0 8px 25px -8px #AAAAAA;
  }
}

//button then size
@mixin button-size($padding-up-down,$padding-left-right,$font-size) {
  padding: $padding-up-down $padding-left-right;
  font-size: $font-size !important;
}

/****************************************** button end *******************************************************************/



